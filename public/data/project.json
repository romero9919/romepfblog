{
  "projects": [
    {
      "title": "jsp Board",
      "links": "http://3.34.240.139:80/jspBoard",
      "gitlinks": "https://github.com/romero9919/jspBoard",
      "category": "개인 프로젝트",
      "explanation": "jsp, servlet을 이용한 게시판.",
      "period": "2023. 5 ~ 2024.1",
      "technology": ["jsp & servlet"],
      "database": "MySQL",
      "project": [
        {
          "version": "Java 11",
          "technology": ["jsp & servlet", "session 인증 및 filter이용", "jndi 커넥션 풀"],
          "frontend": "HTML5, CSS3, JavaScript, Jquery, Bootstrap 4",
          "history": [
            "클래스를 이용해 db connection",
            "jndi를 이용, db 커넥션을 커넥션 풀로 변경",
            "summernote를 이용해 글쓰기 위지윅에디터 추가",
            "위지윅 에디터 이미지 업로드를 위해 db 에 업로드 테이블을 만듬",
            "apache commons upload 라이브러리를 이용한 업로드",
            "위지윅 에디터 이용을 위해 ajax 업로드 셋팅"
          ],
          "events": [
            {
              "title": "fileupload",
              "details": [
                "summernote를 이용한 파일업로드(이미지)는 1.업로드 2.글 insert 순서이다.",
                "업로드가 일어난 후 클라이언트가 글을 올리지 않으면 이미 업로드된 파일은 트래쉬 파일이 된다.",
                "따라서 이 파일들을 처리할 수 있는 로직을 구상했다.",
                "write.js 파일이 열리면 imnum 이라는 input hidden에 임의의 value 값을 입력한다. (타임스탬프를 이용)",
                "파일업로드가 있으면 board_img 테이블에 내용을 저장하고 imnum 값도 받아서 저장.",
                "이때 글이 저장될 board 테이블의 아이디값을 외래키로 갖는 board_id에는 0을 저장",
                "글이 저장되면(insert) 저장된 id 값을 받아 board_img 테이블의 board_id를 업데이트",
                "이때 where 절은 imnum 을 이용.",
                "사용자가 파일만 올리고 글을 올리지 않고 나가게 되면 board_img의 board_id컬럼은 0값이 저장됨.",
                "게시판 시작화면(list)에서 board_img 테이블의 where board_id=0 값을 찾아서 파일을 지우고 record도 삭제"
              ]
            },
            {
              "type": "dbconnect",
              "details": [
                "jdbc connect class 를 이용해 db connect",
                "db 커넥션 풀을 이용해 db connection 관리로 변경"
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "Spring Board",
      "links": "/",
      "gitlinks": "https://github.com/romero9919/spboard",
      "category": "개인 프로젝트",
      "explanation": "Spring Legacy를 이용한 게시판.",
      "period": "2023. 8 ~ 2024.5",
      "technology": ["Spring WEB"],
      "database": "MySQL",
      "project": [
        {
          "version": "Java 11",
          "technology": ["Spring WEB", "MyBatis"],
          "frontend": "HTML5, CSS3, JavaScript, Jquery, Bootstrap 4",
          "history": [
            "servlet-context.xml을 이용해 db connection",
            "summernote를 이용해 글쓰기 위지윅에디터 추가",
            "위지윅 에디터 이미지 업로드를 위해 db 에 업로드 테이블을 만듬",
            "MVC 패턴을 통해 전체적 플로우 구축",
            "위지윅 에디터 이용을 위해 ajax 업로드 셋팅"
          ],
          "events": [
            {
              "title": "dbconnect",
              "details": [
                "xml을이용해 db connect",
                "db 커넥션 풀을 이용해 db connection 관리로 변경"
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "Boot-Board",
      "links": "http://3.34.240.139:8080/",
      "gitlinks": "https://github.com/romero9919/board_spboot",
      "category": "개인 프로젝트",
      "explanation": "Springboot를 이용한 게시판.",
      "period": "2024. 1 ~ Current",
      "technology": ["Springboot"],
      "database": "MySQL",
      "project": [
        {
          "version": "Java 17",
          "technology": ["Springboot", "JPA Hibernate", "Lombok"],
          "frontend": "HTML5, CSS3, JavaScript, Jquery, Bootstrap 4",
          "history": [
            "application.properties를 이용해 db connection",
            "summernote를 이용해 글쓰기 위지윅에디터 추가",
            "위지윅 에디터 이미지 업로드를 위해 db 에 업로드 테이블을 만듬",
            "위지윅 에디터 이용을 위해 ajax 업로드 셋팅"
          ],
          "events": [
            {
              "title": "jpa hibernate",
              "details": [
                "API 활용을 위해 JPA Hibernate를 사용",
                "다른 프로젝트와 공용으로 사용하는 테이블",
                "테이블의 컬럼이 snake case로 작성되어 있어 쿼리 작업 오류",
                "방법을 찾던 중 컬럼을 그냥 camel case로 ALTER하여 해결"
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "Blog-Me",
      "links": "/",
      "gitlinks": "https://github.com/romero9919/myblog",
      "category": "개인 프로젝트",
      "explanation": "React로 프런트엔드를, Java Servlet으로로 백엔드를 처리해본 블로그 프로젝트.",
      "period": "2024. 1 ~ Current",
      "technology": ["React", "Java Servlet"],
      "database": "MySQL",
      "project": [
        {
          "version": "Java 11, Node.js 18.17.1",
          "technology": ["jsp & servlet", "session 인증 및 filter이용", "jndi 커넥션풀"],
          "frontend": "HTML5, CSS3, JavaScript, Jquery, Bootstrap 4",
          "history": [
            "React를 통한 Front-end, Java를 통한 Back-end 서비스",
            "Admin 계정 로그인 화면이 따로 존재, Servlet으로 로그인 및 업로드",
            "백엔드로 업로드 된 포스트는 React로 화면에 출력",
            "업로드를 위해 summernote 에디터 활용"
          ],
          "events": [
            {
              "type": "dbconnect",
              "details": [
                "jdbc connect class 를 이용해 db connect",
                "db 커넥션 풀을 이용해 db connection 관리로 변경",
                "MyBatis를 통해 SQL 적용"
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "Same Board, Other Ways",
      "links": "http://3.34.240.139:3000/",
      "gitlinks":"https://github.com/romero9919/board_express",
      "category": "개인 프로젝트",
      "explanation": "같은 db를 이용해 Spring(Legacy), Express, PHP 게시판을 만들어 봄.",
      "period": "2023. 9 ~ Current",
      "technology": ["Spring Framework & Spring MVC", "Express.js", "php"],
      "database": "MySQL",
      "project": [
        {
          "version": "Java 11(Spring MVC), Java 17(Springboot), Node.js 18.17.1(Express)",
          "technology": ["jsp & servlet", "session 인증 및 filter이용", "jndi 커넥션풀"],
          "frontend": "HTML5, CSS3, JavaScript, Jquery, Bootstrap 4",
          "history": [
            "Spring MVC는 xml, Springboot은 application.properties, Express는 dotenv 이용해 connection",
            "summernote를 이용해 글쓰기 위지윅에디터 추가",
            "위지윅 에디터 이미지 업로드를 위해 db 에 업로드 테이블을 만듬",
            "위지윅 에디터 이용을 위해 ajax 업로드 셋팅"
          ],
          "events": [
            {
              "title": "server port",
              "details": [
                "AWS EC2 인스턴스를 생성, 게시판 프로젝트를 업로드하기로 함.",
                "같은 인스턴스에 포트를 나눠 여러 프로젝트를 업로드하기로 결정",
                "Express는 3000포트로 업로드",
                "그러나 위의 jsp Board와 같은 포트에 서비스되는 Spring MVC(tomcat9)가 문제",
                "같은 tomcat 버전을 이용할 수 있으므로 두 프로젝트를 한 포트에 서비스",
                "서비스되는 프로젝트에 접근 시 IP:포트/해당 프로젝트 이름을 입력하도록 함"
              ]
            },
            {
              "type": "dbconnect",
              "details": [
                "네 프로젝트 각각은 서로 다른 db 연결 방법을 가짐",
                "따라서 각 특성에 맞춘 방식으로 db를 연동하며, 모든 프로젝트에 대응되도록 테이블 설계",
                "Express에서는 dotenv 패키지와 mysql-2 패키지를 이용해 접근, Spring에서는 xml 파일을 통해 JDBC 접근",
                "PHP에서는 MySQLi를 사용하여 DB에 접근함"
              ]
            }
          ]
        }
      ]
    }
  ]
}
